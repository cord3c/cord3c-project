buildscript {
	dependencies {
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
		classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
		classpath 'org.ajoberstar:gradle-git-publish:0.2.1'
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5-rc1'
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
		classpath 'net.ltgt.gradle:gradle-apt-plugin:0.10'
		classpath "org.ajoberstar:gradle-git:1.7.2"
		classpath "io.crnk:crnk-gen-gradle:$CRNK_VERSION"
		classpath "net.rdrei.android.buildtimetracker:gradle-plugin:0.11.1"
		classpath "org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:$TESTSETS_VERSION"
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'

		classpath "com.github.rmee:kubectl:${RMEE_GRADLE_VERSION}"
		classpath "com.github.rmee:helm:${RMEE_GRADLE_VERSION}"
		classpath "com.github.rmee:jpa-schema-gen:${RMEE_GRADLE_VERSION}"
	}
}

plugins {
	id "com.github.rmee.jdk-bootstrap" version "1.0.20190725142159"
}

wrapper {
	gradleVersion = GRADLE_VERSION
}

apply plugin: 'jdk-bootstrap'
jdk {
	useAdoptOpenJdk8(JDK_VERSION)
}

// note that a production build creates javadoc, sources jars and signatures undesired during development
// for performance reasons
def isProductionBuild = System.env.BINTRAY_TOKEN != null
ext {
	timestampedVersion = isProductionBuild
}

apply plugin: 'org.ajoberstar.grgit'
def gitCommitTimestamp = grgit.head().date.format("yyyyMMddHHmmss")
if(isProductionBuild) {
	version = BUILD_VERSION_PREFIX + "." + gitCommitTimestamp
}else{
	version = '0.0.0-SNAPSHOT'
}
group = GROUP_ID

if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			// options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

apply plugin: "build-time-tracker"
buildtimetracker {
	reporters {
		summary {
			ordered true
			threshold 500
			barstyle "unicode"
			shortenTaskNames false
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')
}