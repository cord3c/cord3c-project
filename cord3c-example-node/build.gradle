import net.corda.plugins.QuasarPlugin

apply plugin: JavaDefaultsPlugin
apply plugin: QuasarPlugin

apply plugin: 'application'

mainClassName = "io.cord3c.example.node.ExampleNode"

configurations {
	cordapp
	extralib
}

dependencies {
	implementation "net.corda:corda-node:${CORDA_VERSION}"

	implementation 'javax.json:javax.json-api:1.1.4'
	implementation "org.apache.httpcomponents:httpclient:$APACHE_HTTP_VERSION"

	cordapp project(':cord3c-rest-server'), { targetConfiguration = 'shadow' }
	cordapp project(':cord3c-server-http'), { targetConfiguration = 'shadow' }
	cordapp project(':cord3c-ssi-service'), { targetConfiguration = 'shadow' }
	cordapp project(':cord3c-monitor-ping'), { targetConfiguration = 'shadow' }
	cordapp project(':cord3c-example-cordapp'), { targetConfiguration = 'shadow' }

}

apply plugin: JavaImageDefaultsPlugin
jib {
	from {
		image = 'azul/zulu-openjdk:8u192'
	}
	jib {
		extraDirectories.paths = ['src/main/extraFiles', 'build/extraFiles']
	}
	containerizingMode = 'packaged' // required by Corda classloading mechanism
	container {
		ports = ['8080']
		jvmFlags = ["-javaagent:/opt/cord3c/quasar/quasar.jar"] // ${quasar.exclusions.get()}  FIXME
	}
	to {
		image = "cord3c/example-node"
		auth {
			username = dockerHubUser
			password = dockerHubPass
		}
		tags = ['latest']
	}
}

assemble.dependsOn(jibDockerBuild)

task packageCordapps(type: Sync) {
	into file("$buildDir/extraFiles/opt/cord3c/cordapps")
	from configurations.cordapp
}

task packageQuasar(type: Sync) {
	into file("$buildDir/extraFiles/opt/cord3c/quasar")
	from project.configurations.quasar.singleFile
	rename { String fileName ->
		fileName.replace("-core-0.7.10-jdk8", "")
	}
}

processResources.dependsOn packageCordapps, packageQuasar

















