import io.corda3c.gradle.CordappPlugin

apply plugin: JavaDefaultsPlugin
apply plugin: PublishingDefaultsPlugin
apply plugin: net.corda.plugins.QuasarPlugin

dependencies {
	api project(':cord3c-rest-client')
	compileOnly project(':cord3c-server-http')
	api project(':cord3c-ssi-service')

	implementation "org.mapstruct:mapstruct-jdk8:${MAPSTRUCT_VERSION}"

	implementation "io.crnk:crnk-core:${CRNK_VERSION}"
	implementation "io.crnk:crnk-setup-servlet:${CRNK_VERSION}"
	implementation "io.crnk:crnk-data-jpa:${CRNK_VERSION}"
	implementation "io.crnk:crnk-client:${CRNK_VERSION}"
	implementation "io.crnk:crnk-home:${CRNK_VERSION}"

	api 'javax.servlet:javax.servlet-api'
	compileOnly "net.corda:corda-core:${CORDA_VERSION}"
	compileOnly "net.corda:corda-node:${CORDA_VERSION}"

	testImplementation project(':cord3c-common-test')
	testImplementation project(':cord3c-server-http')
	testImplementation project(':cord3c-monitor-ping')
}


apply plugin: 'com.github.johnrengelman.shadow'
shadowJar {
	archiveClassifier = 'cordapp'
	archiveBaseName = 'cord3c-server-rest'
	// relocate 'test', 'test2'
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		}
		shadow(MavenPublication) {
			project.shadow.component(it)
			it.artifacts.first().classifier tasks.shadowJar.archiveClassifier.get()
		}
	}
}

apply plugin: CordappPlugin
cordapp {
	shading = true
	targetPlatformVersion 4
	minimumPlatformVersion 4
	workflow {
		name 'cord3c rest endpoint'
		vendor 'cord3c'
		licence 'TDB'
		versionId 1
	}
	signing {
		enabled false
	}
}

