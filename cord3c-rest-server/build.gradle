import io.corda3c.gradle.CordappPlugin

apply plugin: JavaDefaultsPlugin
apply plugin: PublishingDefaultsPlugin
apply plugin: net.corda.plugins.QuasarPlugin

dependencies {
	api project(':cord3c-rest-api')
	compileOnly project(':cord3c-ssi-api')
	compileOnly project(':cord3c-server-http')
	compileOnly project(':cord3c-ssi-serialization') // TODO make self-contained with ssi being optional

	compileOnly "org.mapstruct:mapstruct-jdk8:${MAPSTRUCT_VERSION}"

	api "io.crnk:crnk-core:${CRNK_VERSION}"
	api "io.crnk:crnk-setup-servlet:${CRNK_VERSION}"
	api "io.crnk:crnk-data-jpa:${CRNK_VERSION}"
	api "io.crnk:crnk-client:${CRNK_VERSION}"
	api "io.crnk:crnk-home:${CRNK_VERSION}"

	compileOnly 'javax.servlet:javax.servlet-api'
	compileOnly "net.corda:corda-core:${CORDA_VERSION}"
	compileOnly "net.corda:corda-node:${CORDA_VERSION}"

	testImplementation project(':cord3c-ssi-service')
	testImplementation project(':cord3c-common-test')
	testImplementation project(':cord3c-server-http')
	testImplementation project(':cord3c-monitor-ping')
	testImplementation project(':cord3c-rest-client')
}


apply plugin: 'com.github.johnrengelman.shadow'
shadowJar {
	archiveClassifier = 'cordapp'
	archiveBaseName = 'cord3c-rest-server'
	// relocate 'test', 'test2'

	dependencies {
		exclude(dependency {
			return (it.moduleGroup.startsWith('com.fasterxml') || it.moduleGroup == 'org.slf4j'
					|| it.moduleGroup == 'javax.xml.bind' || it.moduleName.startsWith('cord3c-ssi')
					|| it.moduleGroup == 'javax.annotation' || it.moduleGroup == 'javax.activation'
					|| it.moduleGroup == 'net.i2p.crypto')
		})
	}
}

def cordappArtifact = artifacts.add('archives', shadowJar.outputs.files.singleFile) {
	type 'cordapp'
	classifier 'cordapp'
	builtBy shadowJar
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
			artifact cordappArtifact
		}
	}
}

apply plugin: CordappPlugin
cordapp {
	shading = true
	targetPlatformVersion 4
	minimumPlatformVersion 4
	workflow {
		name 'cord3c rest endpoint'
		vendor 'cord3c'
		licence 'TDB'
		versionId 1
	}
	signing {
		enabled false
	}
}

